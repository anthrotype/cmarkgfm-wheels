# vim ft=yaml
# CI on Windows via appveyor

environment:
  global:
    PROJECT_SPEC: "cmarkgfm==0.1.0"
    BUILD_DEP: "wheel cffi"
    TEST_DEP: "pytest"
    WHEELHOUSE_UPLOADER_USERNAME:
      secure: +pk0pTV/7c8wam5X9MxIk9KmEvRSLlkXnJ1ZD7UrZAo=
    WHEELHOUSE_UPLOADER_SECRET:
      secure: OoKtt5NaSeYDuj8IE3jD1cU64nhCD0HmjRUi91+cZBjtRydJ4Qs28GDJ/hwuAx1n

  matrix:
    - PYTHON: C:\Python35
    - PYTHON: C:\Python35-x64
    - PYTHON: C:\Python36
    - PYTHON: C:\Python36-x64


matrix:
    fast_finish: true

install:
    # Fetch submodules
    - git submodule update --init --recursive
    # Prepend newly installed Python to the PATH of this build (this cannot be
    # done from inside the powershell script as it would require to restart
    # the parent CMD process).
    - SET PATH=%PYTHON%;%PYTHON%\Scripts;%PATH%
    - python -m pip install -U pip

    # Fix MSVC builds for 64-bit Python. See:
    # http://stackoverflow.com/questions/32091593/cannot-install-windows-sdk-7-1-on-windows-10
    - echo "C:\Program Files\Microsoft SDKs\Windows\v7.1\Bin\SetEnv.cmd" /x64 > "C:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\bin\amd64/vcvars64.bat"

    # Check that we have the expected version and architecture for Python
    - python --version
    - python -c "import struct; print(struct.calcsize('P') * 8)"

build_script:
    # Install the dependencies of the project.
    - python -m pip install %BUILD_DEP%
    # Build wheel
    - python -m pip wheel --wheel-dir=wheelhouse --no-binary=cmarkgfm %PROJECT_SPEC%
    - python -m dir wheelhouse

test_script:
    # create test env
    - virtualenv --python %PYTHON%\Python.exe test_env
    - test_env\Scripts\activate.bat
    - where python
    - python -m pip install %TEST_DEP%

    # install from wheel
    - python -m pip install --pre --no-index --find-links=%REPO_DIR%\\wheelhouse %PACKAGE_NAME%

    # Change into an innocuous directory and find tests from installation
    - mkdir for_testing
    - cd for_testing
    - python --version
    - python -c "import cmarkgfm;"
    - cd ..

artifacts:
    - path: "%REPO_DIR%\\wheelhouse"

on_success:
  # Upload the generated wheel package to Rackspace
  # On Windows, Apache Libcloud cannot find a standard CA cert bundle so we
  # disable the ssl checks.
  - pip install wheelhouse-uploader
  - "python -m wheelhouse_uploader upload
    --no-ssl-check
    --no-update-index
    --provider GOOGLE_STORAGE
    --local-folder=%REPO_DIR%\\wheelhouse
    cmarkgfm-wheels"

cache:
  # Use the appveyor cache to avoid re-downloading large archives.
  - '%APPDATA%\pip\Cache'
