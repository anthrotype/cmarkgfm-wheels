env:
    global:
        - PROJECT_SPEC="cmarkgfm==0.1.0"
        # pip dependencies to _build_ your project
        - BUILD_DEPENDS="cffi"
        # pip dependencies to _test_ your project.  Include any dependencies
        # that you need, that are also specified in BUILD_DEPENDS, this will be
        # a separate install.
        - TEST_DEPENDS="pytest"
        - PLAT=x86_64
        - UNICODE_WIDTH=32

language: python
# The travis Python version is unrelated to the version we build and test
# with.  This is set with the MB_PYTHON_VERSION variable.
python: 3.5
sudo: required
dist: trusty
services: docker

matrix:
  exclude:
    # Exclude the default Python 3.5 build
    - python: 3.5
  include:
    - os: linux
      env: MB_PYTHON_VERSION=2.7
    # - os: linux
    #   env:
    #     - MB_PYTHON_VERSION=2.7
    #     - UNICODE_WIDTH=16
    # - os: linux
    #   env:
    #     - MB_PYTHON_VERSION=2.7
    #     - PLAT=i686
    # - os: linux
    #   env:
    #     - MB_PYTHON_VERSION=2.7
    #     - PLAT=i686
    #     - UNICODE_WIDTH=16
    # - os: linux
    #   env:
    #     - MB_PYTHON_VERSION=3.4
    # - os: linux
    #   env:
    #     - MB_PYTHON_VERSION=3.4
    #     - PLAT=i686
    # - os: linux
    #   env:
    #     - MB_PYTHON_VERSION=3.5
    # - os: linux
    #   env:
    #     - MB_PYTHON_VERSION=3.5
    #     - PLAT=i686
    # - os: linux
    #   env:
    #     - MB_PYTHON_VERSION=3.6
    # - os: linux
    #   env:
    #     - MB_PYTHON_VERSION=3.6
    #     - PLAT=i686
    # - os: osx
    #   language: generic
    #   env:
    #     - MB_PYTHON_VERSION=2.7
    # - os: osx
    #   language: generic
    #   env:
    #     - MB_PYTHON_VERSION=3.4
    # - os: osx
    #   language: generic
    #   env:
    #     - MB_PYTHON_VERSION=3.5
    # - os: osx
    #   language: generic
    #   env:
    #     - MB_PYTHON_VERSION=3.6

before_install:
    - source multibuild/common_utils.sh
    - source multibuild/travis_steps.sh
    - before_install

install:
    - build_index_wheel $PROJECT_SPEC

script:
    - install_run $PLAT

after_success:
    # Upload wheels to PyPI.
    - pip install twine
    # This uploads the wheels to a Rackspace container owned by the
    # scikit-learn team, available at http://wheels.scipy.org.  See above
    # for information on using this account or choosing another.
    # - python -m wheelhouse_uploader upload --local-folder
    #     ${TRAVIS_BUILD_DIR}/wheelhouse/
    #     --no-update-index
    #     wheels
